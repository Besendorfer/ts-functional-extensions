export {};

declare global {
  interface Array<T> {
    groupBy(cb: (value: T) => PropertyKey): Record<PropertyKey, T[]>;
  }
}

/**
 * groupBy:
 *
 * `groupBy` is a method that allows you to group elements of an array
 * by the key generated by the provided callback function.
 *
 */

if (!Array.prototype.groupBy) {
  Object.defineProperty(Array.prototype, 'groupBy', {
    value: function groupBy<T>(
      this: T[],
      cb: (value: T) => PropertyKey,
    ): Record<PropertyKey, T[]> {
      return this.reduce(
        (acc, curr) => {
          acc[cb(curr)] = acc[cb(curr)] || [];
          acc[cb(curr)].push(curr);
          return acc;
        },
        {} as Record<PropertyKey, T[]>,
      );
    },
  });
}
