export {};

declare global {
  interface Array<T> {
    associateBy(cb: (value: T) => PropertyKey): Record<PropertyKey, T>;
  }
}

/**
 * associateBy:
 *
 * `associateBy` is a method that allows you to associate each element of an array
 * with a key generated by the provided callback function.
 *
 */

if (!Array.prototype.associateBy) {
  Object.defineProperty(Array.prototype, 'associateBy', {
    value: function associateBy<T>(
      this: T[],
      cb: (value: T) => PropertyKey,
    ): Record<PropertyKey, T> {
      return this.reduce(
        (acc, curr) => {
          acc[cb(curr)] = curr;
          return acc;
        },
        {} as Record<PropertyKey, T>,
      );
    },
  });
}
